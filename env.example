# Docker settings
POSTGRES_HOST=localhost
POSTGRES_PORT=39001
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=brasilio
GRAPHENEDB_URL="http://localhost:39002"
NEO4J_BOLT_PORT=39003

# Django settings
ALLOWED_HOSTS=*
DATABASE_URL=postgres://postgres:postgres@127.0.0.1:39001/brasilio
DATA_URL="https://docs.google.com/spreadsheets/d/1-hw07Q7PBGlz2QjOifkwM3T8406OqsGOAWA-fikgW8c/export?format=xlsx"
DEBUG=True
PRODUCTION=False
SECRET_KEY=012345678901234567890123456789
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=localhost
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
EMAIL_PORT=39004
EMAIL_USE_TLS=False
ADMINS="programmer|email@example.com"
FERNET_KEY="1Vo_8aX-WIKEyOWsusu8SHdMDc258elXTN4-WYu_9MQ="
RECAPTCHA_PUBLIC_KEY="CHAVE_PUBLICA_RECAPTCHA"
RECAPTCHA_PRIVATE_KEY="CHAVE_PRIVADA_RECAPTCHA"
REDIS_URL=redis://localhost:39006
CACHE_ENABLED=True
CACHE_BACKEND=django_redis.cache.RedisCache
CACHE_CLIENT_CLASS=django_redis.client.DefaultClient
CACHE_KEY_PREFIX=datacache
WORKERS=4
DEFAULT_FILE_STORAGE="django.core.files.storage.FileSystemStorage"

# If using AWS storage, you'll have to populate these values
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""
AWS_STORAGE_BUCKET_NAME=""
AWS_DEFAULT_ACL=""
AWS_BUCKET_ACL=""
AWS_AUTO_CREATE_BUCKET=False
AWS_S3_ENDPOINT_URL=""
AWS_S3_CUSTOM_DOMAIN=""
AWS_IS_GZIPPED=False
GZIP_CONTENT_TYPES=""
